# -*- coding: utf-8 -*-
"""Assignment16

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Io8xl1rxBpxBk_CxFvxMRh5s5n56_3jD
"""

#Code by K.A. Raja Babu
#July 10,2021

import numpy as np
import matplotlib.pyplot as plt

#Defining pdf for bit 0
def p(X):
   if -0.25<=X<=0.25:
      return 2
   else:
      return 0

#Defining pdf for bit 1
def q(Y):
   if 0<=Y<=1:
      return 1
   else:
      return 0

#Calculation of average bit error probability
BEP_0 = p(0.25)*(0.25-0.2)
BEP_1 = q(0)*(0.2-0)
BEP_avg =0.5 * (BEP_0+BEP_1)
print("Average bit error probability is",BEP_avg)


#Plotting pdf of bit 0
x1=np.linspace(-0.5,-0.2499,20)
x2=np.linspace(-0.25,0.25,50)
x3=np.linspace(0.2599,0.5,20)
y1=np.zeros(20)
y2=2*np.ones(50)
xp=np.concatenate((x1,x2,x3))
yp=np.concatenate((y1,y2,y1))
plot1 = plt. figure(1)
plt.grid()
plt.plot(xp,yp,label='$p_X(x)$')
plt.legend()
plt.show()

#Plotting pdf of bit 0
a1=np.linspace(-0.9,-0.009,20)
a2=np.linspace(0,1,50)
a3=np.linspace(1.001,2.0,20)
b1=np.zeros(20)
b2=np.ones(50)
ap=np.concatenate((a1,a2,a3))
bp=np.concatenate((b1,b2,b1))
plot2 = plt. figure(2)
plt.grid()
plt.plot(ap,bp,label='$p_Y(y)$')
plt.legend()
plt.show()